policy_module(thm, 1.100.1)

########################################
#
# Declarations
#

type thm_t;
type thm_exec_t;
init_daemon_domain(thm_t, thm_exec_t)

permissive thm_t;

type thm_initrc_exec_t;
init_script_file(thm_initrc_exec_t)

type thm_conf_t;
files_type(thm_conf_t)

type thm_var_lib_t;
files_type(thm_var_lib_t)

type thm_var_run_t;
files_type(thm_var_run_t)

type thm_port_t;
corenet_port(thm_port_t)

########################################
#
# thm local policy
#
allow thm_t self:process { fork };

allow thm_t self:fifo_file rw_fifo_file_perms;
allow thm_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(thm_t, thm_conf_t, thm_conf_t)
manage_files_pattern(thm_t, thm_conf_t, thm_conf_t)

manage_dirs_pattern(thm_t, thm_var_lib_t, thm_var_lib_t)
manage_files_pattern(thm_t, thm_var_lib_t, thm_var_lib_t)
files_var_lib_filetrans(thm_t, thm_var_lib_t, { dir file })

manage_dirs_pattern(thm_t, thm_var_run_t, thm_var_run_t)
manage_files_pattern(thm_t, thm_var_run_t, thm_var_run_t)

sysnet_dns_name_resolve(thm_t)
corenet_all_recvfrom_unlabeled(thm_t)

allow thm_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(thm_t)
corenet_tcp_sendrecv_generic_node(thm_t)
corenet_tcp_sendrecv_all_ports(thm_t)
corenet_tcp_bind_generic_node(thm_t)

gen_require(`
    type thm_port_t;
')
allow thm_t thm_port_t:tcp_socket name_bind;

gen_require(`
    type thm_port_t;
')
allow thm_t thm_port_t:tcp_socket name_connect;

domain_use_interactive_fds(thm_t)

files_read_etc_files(thm_t)

miscfiles_read_localization(thm_t)

sysnet_dns_name_resolve(thm_t)

allow thm_t thm_exec_t:file execute_no_trans;
allow thm_t self:process setsched;
corecmd_exec_ls(thm_t)
corenet_tcp_connect_http_port(thm_t)
dev_read_urand(thm_t)
fs_getattr_xattr_fs(thm_t)
kernel_read_system_state(thm_t)
