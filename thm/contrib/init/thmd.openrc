#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/thm/.thm" ]; then
	THMD_DEFAULT_DATADIR="/var/lib/thm/.thm"
else
	THMD_DEFAULT_DATADIR="/var/lib/thmd"
fi

THMD_CONFIGFILE=${THMD_CONFIGFILE:-/etc/thm/thm.conf}
THMD_PIDDIR=${THMD_PIDDIR:-/var/run/thmd}
THMD_PIDFILE=${THMD_PIDFILE:-${THMD_PIDDIR}/thmd.pid}
THMD_DATADIR=${THMD_DATADIR:-${THMD_DEFAULT_DATADIR}}
THMD_USER=${THMD_USER:-${THM_USER:-thm}}
THMD_GROUP=${THMD_GROUP:-thm}
THMD_BIN=${THMD_BIN:-/usr/bin/thmd}
THMD_NICE=${THMD_NICE:-${NICELEVEL:-0}}
THMD_OPTS="${THMD_OPTS:-${THM_OPTS}}"

name="THM Core Daemon"
description="THM cryptocurrency P2P network daemon"

command="/usr/bin/thmd"
command_args="-pid=\"${THMD_PIDFILE}\" \
		-conf=\"${THMD_CONFIGFILE}\" \
		-datadir=\"${THMD_DATADIR}\" \
		-daemon \
		${THMD_OPTS}"

required_files="${THMD_CONFIGFILE}"
start_stop_daemon_args="-u ${THMD_USER} \
			-N ${THMD_NICE} -w 2000"
pidfile="${THMD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${THMD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${THMD_USER}:${THMD_GROUP}" \
	"${THMD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${THMD_USER}:${THMD_GROUP}" \
	"${THMD_PIDDIR}"

	checkpath -f \
	-o ${THMD_USER}:${THMD_GROUP} \
	-m 0660 \
	${THMD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${THMD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run thmd."
		eerror "The setting must appear in ${THMD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following"
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is also recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"THM Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
